"""init db

Revision ID: d4901f0d55e5
Revises: 
Create Date: 2018-11-13 16:44:50.102693

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'd4901f0d55e5'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('dantoc',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('deleted', sa.Boolean(), nullable=True),
    sa.Column('deleted_by', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('ma', sa.String(length=255), nullable=True),
    sa.Column('ten', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ma')
    )
    op.create_table('nghenghiep',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('deleted', sa.Boolean(), nullable=True),
    sa.Column('deleted_by', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('ma', sa.String(length=255), nullable=True),
    sa.Column('ten', sa.String(length=255), nullable=True),
    sa.Column('mota', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ma')
    )
    op.create_table('quocgia',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('deleted', sa.Boolean(), nullable=True),
    sa.Column('deleted_by', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('ma', sa.String(length=255), nullable=True),
    sa.Column('ten', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ma')
    )
    op.create_table('role',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('deleted', sa.Boolean(), nullable=True),
    sa.Column('deleted_by', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('trinhdohocvan',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('deleted', sa.Boolean(), nullable=True),
    sa.Column('deleted_by', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('ma', sa.String(length=255), nullable=True),
    sa.Column('ten', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ma')
    )
    op.create_table('tuyendonvi',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('deleted', sa.Boolean(), nullable=True),
    sa.Column('deleted_by', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('ma', sa.String(length=255), nullable=True),
    sa.Column('ten', sa.String(length=255), nullable=True),
    sa.Column('mota', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ma')
    )
    op.create_table('vacxin',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('deleted', sa.Boolean(), nullable=True),
    sa.Column('deleted_by', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('ma', sa.String(length=255), nullable=True),
    sa.Column('ten', sa.String(length=255), nullable=True),
    sa.Column('mota', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ma')
    )
    op.create_table('permission',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('deleted', sa.Boolean(), nullable=True),
    sa.Column('deleted_by', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('subject', sa.String(), nullable=True),
    sa.Column('permission', sa.String(), nullable=True),
    sa.Column('value', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('role_id', 'subject', 'permission', name='uq_permission_role_subject_permission')
    )
    op.create_index(op.f('ix_permission_subject'), 'permission', ['subject'], unique=False)
    op.create_table('tinhthanh',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('deleted', sa.Boolean(), nullable=True),
    sa.Column('deleted_by', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('ma', sa.String(length=255), nullable=True),
    sa.Column('ten', sa.String(length=255), nullable=True),
    sa.Column('quocgia_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['quocgia_id'], ['quocgia.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ma')
    )
    op.create_table('quanhuyen',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('deleted', sa.Boolean(), nullable=True),
    sa.Column('deleted_by', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('ma', sa.String(length=255), nullable=True),
    sa.Column('ten', sa.String(length=255), nullable=True),
    sa.Column('tinhthanh_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['tinhthanh_id'], ['tinhthanh.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ma')
    )
    op.create_table('xaphuong',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('deleted', sa.Boolean(), nullable=True),
    sa.Column('deleted_by', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('ma', sa.String(length=255), nullable=True),
    sa.Column('ten', sa.String(length=255), nullable=True),
    sa.Column('quanhuyen_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['quanhuyen_id'], ['quanhuyen.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ma')
    )
    op.create_table('donvi',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('deleted', sa.Boolean(), nullable=True),
    sa.Column('deleted_by', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('ma', sa.String(length=255), nullable=True),
    sa.Column('ten', sa.String(length=255), nullable=False),
    sa.Column('sodienthoai', sa.String(length=63), nullable=True),
    sa.Column('diachi', sa.String(length=255), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('ghichu', sa.String(length=255), nullable=True),
    sa.Column('xaphuong_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('quanhuyen_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('tinhthanh_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('quocgia_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('tuyendonvi_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('coquanchuquan', sa.String(length=255), nullable=True),
    sa.Column('parent_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('id_mevabe', sa.String(length=255), nullable=True),
    sa.Column('password_mevabe', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['donvi.id'], ),
    sa.ForeignKeyConstraint(['quanhuyen_id'], ['quanhuyen.id'], ),
    sa.ForeignKeyConstraint(['quocgia_id'], ['quocgia.id'], ),
    sa.ForeignKeyConstraint(['tinhthanh_id'], ['tinhthanh.id'], ),
    sa.ForeignKeyConstraint(['tuyendonvi_id'], ['tuyendonvi.id'], ),
    sa.ForeignKeyConstraint(['xaphuong_id'], ['xaphuong.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('thonxom',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('deleted', sa.Boolean(), nullable=True),
    sa.Column('deleted_by', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('ma', sa.String(length=255), nullable=True),
    sa.Column('ten', sa.String(length=255), nullable=True),
    sa.Column('xaphuong_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['xaphuong_id'], ['xaphuong.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ma')
    )
    op.create_table('user',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('deleted', sa.Boolean(), nullable=True),
    sa.Column('deleted_by', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('password', sa.String(length=255), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('phone', sa.String(length=255), nullable=True),
    sa.Column('birthday', sa.DateTime(), nullable=True),
    sa.Column('gender', sa.String(length=255), nullable=True),
    sa.Column('donvi_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('confirmed_at', sa.DateTime(), nullable=True),
    sa.Column('last_login_at', sa.DateTime(), nullable=True),
    sa.Column('current_login_at', sa.DateTime(), nullable=True),
    sa.Column('last_login_ip', sa.String(length=255), nullable=True),
    sa.Column('current_login_ip', sa.String(length=255), nullable=True),
    sa.Column('login_count', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['donvi_id'], ['donvi.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('phone')
    )
    op.create_table('user_donvi',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('deleted', sa.Boolean(), nullable=True),
    sa.Column('deleted_by', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('uid', sa.String(length=200), nullable=False),
    sa.Column('ten', sa.String(length=255), nullable=False),
    sa.Column('macongdan', sa.String(length=200), nullable=True),
    sa.Column('donvi_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['donvi_id'], ['donvi.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uid', 'donvi_id', name='uq_user_donvi_uid_donvi_id')
    )
    op.create_index(op.f('ix_user_donvi_donvi_id'), 'user_donvi', ['donvi_id'], unique=False)
    op.create_index(op.f('ix_user_donvi_uid'), 'user_donvi', ['uid'], unique=False)
    op.create_table('roles_users',
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], )
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('roles_users')
    op.drop_index(op.f('ix_user_donvi_uid'), table_name='user_donvi')
    op.drop_index(op.f('ix_user_donvi_donvi_id'), table_name='user_donvi')
    op.drop_table('user_donvi')
    op.drop_table('user')
    op.drop_table('thonxom')
    op.drop_table('donvi')
    op.drop_table('xaphuong')
    op.drop_table('quanhuyen')
    op.drop_table('tinhthanh')
    op.drop_index(op.f('ix_permission_subject'), table_name='permission')
    op.drop_table('permission')
    op.drop_table('vacxin')
    op.drop_table('tuyendonvi')
    op.drop_table('trinhdohocvan')
    op.drop_table('role')
    op.drop_table('quocgia')
    op.drop_table('nghenghiep')
    op.drop_table('dantoc')
    # ### end Alembic commands ###
